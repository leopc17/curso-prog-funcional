uses aula28fixacao0102;
dec produtolst : list num -> num;
dec tamanho : list num -> num;
dec listamult : list num # num -> list num;
dec checa_primo : num -> truval;
dec faixa_primo : num # num -> list num;

--- produtolst [] <= 1;
--- produtolst (x :: xs) <= x * produtolst xs;

--- tamanho [] <= 0;
--- tamanho (x :: xs) <= 1 + tamanho xs;

--- listamult ([], n) <= [];
--- listamult (x :: xs, n) <= if n mod x = 0 then x :: listamult (xs, n) else listamult (xs, n);

--- checa_primo 1 <= false;
--- checa_primo 2 <= true;
--- checa_primo n <= if tamanho (listamult (faixa (2, n - 1, 1), n)) > 0 then false else true;

--- faixa_primo (n, m) <= comp (faixa (n, m, 1), lambda x => checa_primo x);
